<?php

abstract class TDBSet {

	static private $Selfins = null;

	protected $templ = null;

	
	static public function GetTsdf() {
		self::$Selfins = new static();
		self::$Selfins->templ = get_called_class() . " " . "TDBSet";
		return self::$Selfins;
	}


	
}
class TDSQL {

	static public function GetManufs($CType) {
		if ($CType == 0) {
			$WHERE = "MFA_PC_MFC>0";
		}
		else {
			if ($CType == 2) {
				$WHERE = "MFA_CV_MFC>0";
			}
			else {
				$WHERE = "MFA_PC_MFC>0 OR MFA_CV_MFC>0";
			}
		}
		$SQL = "SELECT MFA_ID, MFA_BRAND, MFA_MFC_CODE, MFA_PC_MFC, MFA_CV_MFC FROM MANUFACTURERS WHERE " . $WHERE . " ORDER BY MFA_BRAND ASC";
		$resDB = new TDSQLQuery();
		$resDB->QuerySelect($SQL);
		return $resDB;
	}


	static public function GetManufByCode($BName) {
		$UBrand = TDMStrToUp($BName);
		if ($UBrand == "RENAULT TRUCKS") {
		}
		else {
			if (0 < strpos($UBrand, "-TRUCKS")) {
				$UBrand = str_replace("-TRUCKS", "", $UBrand);
			}
			else {
				if (0 < strpos($UBrand, "TRUCKS")) {
					$UBrand = str_replace("TRUCKS", "", $UBrand);
				}
			}
		}
		$SQL = "SELECT MFA_BRAND, MFA_MFC_CODE, MFA_ID FROM MANUFACTURERS WHERE MFA_BRAND = \"" . $UBrand . "\"";
		$resDB = new TDSQLQuery();
		$resDB->QuerySelect($SQL);
		return $resDB;
	}


	static public function GetModels($MFA_ID, $LNG_ID, $arFilter = array(), $Not = false, $YearFrom, $CarsTrucks = 0, $NotUSA = 0) {
		if ($YearFrom <= 0) {
			$YearFrom = TDM_MODELS_FROM;
		}
		if (0 < count($arFilter)) {
			if ($Not == true) {
				$NOT_FILTER = " NOT ";
			}
			$IN_FILTER = " AND MOD_ID " . $NOT_FILTER . " IN (" . implode(",", $arFilter) . ")";
		}
		if (0 < $CarsTrucks) {
			if ($CarsTrucks == 1) {
				$CTFILTER = "MOD_PC>0 AND";
			}
			else {
				$CTFILTER = "MOD_CV>0 AND";
			}
		}
		if ($NotUSA == 1) {
			$NOT_USA = "AND TEX_TEXT NOT LIKE \"%[USA]%\"";
		}
		$SQL = "SELECT MOD_ID, TEX_TEXT AS MOD_CDS_TEXT, MOD_PCON_START, MOD_PCON_END " . "FROM MODELS " . "INNER JOIN COUNTRY_DESIGNATIONS ON CDS_ID = MOD_CDS_ID " . "INNER JOIN DES_TEXTS ON TEX_ID = CDS_TEX_ID " . "WHERE " . $CTFILTER . " MOD_MFA_ID = " . $MFA_ID . " AND CDS_LNG_ID = " . $LNG_ID . " AND MOD_PCON_START > " . $YearFrom . "00 " . $IN_FILTER . " " . $NOT_USA . " " . "ORDER BY MOD_CDS_TEXT";
		$resDB = new TDSQLQuery();
		$resDB->QuerySelect($SQL);
		return $resDB;
	}


	static public function GetModelByID($MFA_ID, $MOD_ID, $LNG_ID = TDM_LANG_ID) {
		$SQL = "SELECT MOD_ID, TEX_TEXT AS MOD_CDS_TEXT, MOD_PCON_START, MOD_PCON_END \r\n\t\t\tFROM MODELS \r\n\t\t\t\t\tINNER JOIN COUNTRY_DESIGNATIONS ON CDS_ID = MOD_CDS_ID\r\n\t\t\t\t\tINNER JOIN DES_TEXTS ON TEX_ID = CDS_TEX_ID\r\n\t\t\tWHERE MOD_MFA_ID = " . $MFA_ID . " AND MOD_ID = " . $MOD_ID . " AND CDS_LNG_ID = " . $LNG_ID;
		$resDB = new TDSQLQuery();
		$resDB->QuerySelect($SQL);
		return $resDB;
	}


	static public function GetTypes($MOD_ID, $LNG_ID = TDM_LANG_ID) {
		$SQL = "SELECT\r\n\t\t\t\t\tTYP_ID, DES_TEXTS.TEX_TEXT AS TYP_CDS_TEXT, TYP_PCON_START, TYP_PCON_END, TYP_CCM, TYP_KW_FROM, TYP_KW_UPTO, TYP_HP_FROM, TYP_HP_UPTO, TYP_CYLINDERS, ENGINES.ENG_CODE,\r\n\t\t\t\t\tDES_TEXTS2.TEX_TEXT AS TYP_ENGINE_DES_TEXT, DES_TEXTS3.TEX_TEXT AS TYP_FUEL_DES_TEXT,\r\n\t\t\t\t\tIFNULL(DES_TEXTS4.TEX_TEXT, DES_TEXTS5.TEX_TEXT) AS TYP_BODY_DES_TEXT,\r\n\t\t\t\t\tDES_TEXTS6.TEX_TEXT AS TYP_AXLE_DES_TEXT, TYP_MAX_WEIGHT\r\n\t\t\t\tFROM TYPES\r\n\t\t\t\t\tINNER JOIN COUNTRY_DESIGNATIONS ON COUNTRY_DESIGNATIONS.CDS_ID = TYP_CDS_ID AND COUNTRY_DESIGNATIONS.CDS_LNG_ID = " . $LNG_ID . "\r\n\t\t\t\t\tINNER JOIN DES_TEXTS ON DES_TEXTS.TEX_ID = COUNTRY_DESIGNATIONS.CDS_TEX_ID\r\n\t\t\t\t\tLEFT JOIN DESIGNATIONS ON DESIGNATIONS.DES_ID = TYP_KV_ENGINE_DES_ID AND DESIGNATIONS.DES_LNG_ID = " . $LNG_ID . "\r\n\t\t\t\t\tLEFT JOIN DES_TEXTS AS DES_TEXTS2 ON DES_TEXTS2.TEX_ID = DESIGNATIONS.DES_TEX_ID\r\n\t\t\t\t\tLEFT JOIN DESIGNATIONS AS DESIGNATIONS2 ON DESIGNATIONS2.DES_ID = TYP_KV_FUEL_DES_ID AND DESIGNATIONS2.DES_LNG_ID = " . $LNG_ID . "\r\n\t\t\t\t\tLEFT JOIN DES_TEXTS AS DES_TEXTS3 ON DES_TEXTS3.TEX_ID = DESIGNATIONS2.DES_TEX_ID\r\n\t\t\t\t\tLEFT JOIN LINK_TYP_ENG ON LTE_TYP_ID = TYP_ID\r\n\t\t\t\t\tLEFT JOIN ENGINES ON ENG_ID = LTE_ENG_ID\r\n\t\t\t\t\tLEFT JOIN DESIGNATIONS AS DESIGNATIONS3 ON DESIGNATIONS3.DES_ID = TYP_KV_BODY_DES_ID AND DESIGNATIONS3.DES_LNG_ID = " . $LNG_ID . "\r\n\t\t\t\t\tLEFT JOIN DES_TEXTS AS DES_TEXTS4 ON DES_TEXTS4.TEX_ID = DESIGNATIONS3.DES_TEX_ID\r\n\t\t\t\t\tLEFT JOIN DESIGNATIONS AS DESIGNATIONS4 ON DESIGNATIONS4.DES_ID = TYP_KV_MODEL_DES_ID AND DESIGNATIONS4.DES_LNG_ID = " . $LNG_ID . "\r\n\t\t\t\t\tLEFT JOIN DES_TEXTS AS DES_TEXTS5 ON DES_TEXTS5.TEX_ID = DESIGNATIONS4.DES_TEX_ID\r\n\t\t\t\t\tLEFT JOIN DESIGNATIONS AS DESIGNATIONS5 ON DESIGNATIONS5.DES_ID = TYP_KV_AXLE_DES_ID AND DESIGNATIONS5.DES_LNG_ID = " . $LNG_ID . "\r\n\t\t\t\t\tLEFT JOIN DES_TEXTS AS DES_TEXTS6 ON DES_TEXTS6.TEX_ID = DESIGNATIONS5.DES_TEX_ID\r\n\t\t\t\tWHERE\r\n\t\t\t\t\tTYP_MOD_ID = " . $MOD_ID . " AND DES_TEXTS.TEX_TEXT NOT LIKE \"%ORA-06502%\" \r\n\t\t\t\tORDER BY\r\n\t\t\t\t\tTYP_SORT, TYP_CDS_TEXT, TYP_PCON_START, TYP_CCM";
		$resDB = new TDSQLQuery();
		$resDB->QuerySelect($SQL);
		return $resDB;
	}


	static public function GetTypeByID($MOD_ID, $TYP_ID, $LNG_ID = TDM_LANG_ID) {
		$SQL = "SELECT TYP_ID, DES_TEXTS.TEX_TEXT AS TYP_CDS_TEXT, TYP_PCON_START, TYP_PCON_END, TYP_CCM, TYP_KW_FROM, TYP_KW_UPTO, TYP_HP_FROM, TYP_HP_UPTO, TYP_CYLINDERS, ENGINES.ENG_CODE,\r\n\t\t\t\tDES_TEXTS2.TEX_TEXT AS TYP_ENGINE_DES_TEXT, DES_TEXTS3.TEX_TEXT AS TYP_FUEL_DES_TEXT,\r\n\t\t\t\tIFNULL(DES_TEXTS4.TEX_TEXT, DES_TEXTS5.TEX_TEXT) AS TYP_BODY_DES_TEXT,\r\n\t\t\t\tDES_TEXTS6.TEX_TEXT AS TYP_AXLE_DES_TEXT, TYP_MAX_WEIGHT\r\n\t\t\tFROM TYPES \r\n\t\t\t\tINNER JOIN COUNTRY_DESIGNATIONS ON COUNTRY_DESIGNATIONS.CDS_ID = TYP_CDS_ID AND COUNTRY_DESIGNATIONS.CDS_LNG_ID = " . $LNG_ID . "\r\n\t\t\t\t\tINNER JOIN DES_TEXTS ON DES_TEXTS.TEX_ID = COUNTRY_DESIGNATIONS.CDS_TEX_ID\r\n\t\t\t\t\tLEFT JOIN DESIGNATIONS ON DESIGNATIONS.DES_ID = TYP_KV_ENGINE_DES_ID AND DESIGNATIONS.DES_LNG_ID = " . $LNG_ID . "\r\n\t\t\t\t\tLEFT JOIN DES_TEXTS AS DES_TEXTS2 ON DES_TEXTS2.TEX_ID = DESIGNATIONS.DES_TEX_ID\r\n\t\t\t\t\tLEFT JOIN DESIGNATIONS AS DESIGNATIONS2 ON DESIGNATIONS2.DES_ID = TYP_KV_FUEL_DES_ID AND DESIGNATIONS2.DES_LNG_ID = " . $LNG_ID . "\r\n\t\t\t\t\tLEFT JOIN DES_TEXTS AS DES_TEXTS3 ON DES_TEXTS3.TEX_ID = DESIGNATIONS2.DES_TEX_ID\r\n\t\t\t\t\tLEFT JOIN LINK_TYP_ENG ON LTE_TYP_ID = TYP_ID\r\n\t\t\t\t\tLEFT JOIN ENGINES ON ENG_ID = LTE_ENG_ID\r\n\t\t\t\t\tLEFT JOIN DESIGNATIONS AS DESIGNATIONS3 ON DESIGNATIONS3.DES_ID = TYP_KV_BODY_DES_ID AND DESIGNATIONS3.DES_LNG_ID = " . $LNG_ID . "\r\n\t\t\t\t\tLEFT JOIN DES_TEXTS AS DES_TEXTS4 ON DES_TEXTS4.TEX_ID = DESIGNATIONS3.DES_TEX_ID\r\n\t\t\t\t\tLEFT JOIN DESIGNATIONS AS DESIGNATIONS4 ON DESIGNATIONS4.DES_ID = TYP_KV_MODEL_DES_ID AND DESIGNATIONS4.DES_LNG_ID = " . $LNG_ID . "\r\n\t\t\t\t\tLEFT JOIN DES_TEXTS AS DES_TEXTS5 ON DES_TEXTS5.TEX_ID = DESIGNATIONS4.DES_TEX_ID\r\n\t\t\t\t\tLEFT JOIN DESIGNATIONS AS DESIGNATIONS5 ON DESIGNATIONS5.DES_ID = TYP_KV_AXLE_DES_ID AND DESIGNATIONS5.DES_LNG_ID = " . $LNG_ID . "\r\n\t\t\t\t\tLEFT JOIN DES_TEXTS AS DES_TEXTS6 ON DES_TEXTS6.TEX_ID = DESIGNATIONS5.DES_TEX_ID\r\n\t\t\tWHERE TYP_MOD_ID = " . $MOD_ID . " AND TYP_ID=" . $TYP_ID;
		$resDB = new TDSQLQuery();
		$resDB->QuerySelect($SQL);
		return $resDB;
	}


	static public function GetSections($TYP_ID, $PARENT, $ORDER = "STR_SORT", $LNG_ID = TDM_LANG_ID) {
		$TYP_EXIST = "";
		if (0 < $TYP_ID) {
			$TYP_EXIST = " AND EXISTS ( " . "SELECT * FROM LINK_GA_STR " . "INNER JOIN LINK_LA_TYP ON LAT_TYP_ID = " . $TYP_ID . " AND LAT_GA_ID = LGS_GA_ID " . "INNER JOIN LINK_ART ON LA_ID = LAT_LA_ID " . "WHERE " . "LGS_STR_ID = STR_ID " . "LIMIT 1) ";
		}
		$SQL = "SELECT STR_ID, TEX_TEXT AS STR_DES_TEXT, STR_LEVEL, STR_ID_PARENT AS PID, " . "IF(EXISTS(SELECT * FROM SEARCH_TREE AS SEARCH_TREE2 WHERE SEARCH_TREE2.STR_ID_PARENT <=> SEARCH_TREE.STR_ID LIMIT 1), 1, 0) AS DESCENDANTS " . "FROM SEARCH_TREE " . "INNER JOIN DESIGNATIONS ON DES_ID = STR_DES_ID " . "INNER JOIN DES_TEXTS ON TEX_ID = DES_TEX_ID " . "WHERE " . "STR_ID_PARENT <=> " . $PARENT . " AND " . "DES_LNG_ID = " . $LNG_ID . " " . $TYP_EXIST . " " . "ORDER BY " . $ORDER;
		$resDB = new TDSQLQuery();
		$resDB->QuerySelect($SQL);
		return $resDB;
	}


	static public function GetSectionsRoot($PARENT, $LNG_ID = TDM_LANG_ID) {
		$SQL = "SELECT STR_ID, TEX_TEXT AS STR_DES_TEXT " . "FROM SEARCH_TREE " . "INNER JOIN DESIGNATIONS ON DES_ID = STR_DES_ID " . "INNER JOIN DES_TEXTS ON TEX_ID = DES_TEX_ID " . "WHERE " . "STR_ID_PARENT <=> " . $PARENT . " AND " . "DES_LNG_ID = " . $LNG_ID . " " . "ORDER BY STR_DES_TEXT";
		$resDB = new TDSQLQuery();
		$resDB->QuerySelect($SQL);
		return $resDB;
	}


	static public function GetSectionData($SID, $LNG_ID = TDM_LANG_ID) {
		$SQL = "SELECT STR_ID, STR_ID_PARENT, STR_LEVEL, TEX_TEXT AS STR_DES_TEXT " . "FROM SEARCH_TREE " . "INNER JOIN DESIGNATIONS ON DES_ID = STR_DES_ID " . "INNER JOIN DES_TEXTS ON TEX_ID = DES_TEX_ID " . "WHERE " . "STR_ID <=> " . $SID . " AND " . "DES_LNG_ID = " . $LNG_ID . " ";
		$resDB = new TDSQLQuery();
		$resDB->QuerySelect($SQL);
		$arDB = $resDB->Fetch();
		return $arDB;
	}


	static public function GetSectionParts($TYP_ID, $SID, $LNG_ID = TDM_LANG_ID) {
		$SQL = "SELECT DISTINCT ART_ID AS AID, ART_ARTICLE_NR AS ARTICLE, SUP_BRAND AS BRAND, SUP_ID AS BID, DES_TEXTS.TEX_TEXT AS TD_NAME " . "FROM LINK_GA_STR " . "INNER JOIN LINK_LA_TYP ON LAT_TYP_ID = " . $TYP_ID . " AND LAT_GA_ID = LGS_GA_ID " . "INNER JOIN LINK_ART ON LA_ID = LAT_LA_ID " . "INNER JOIN ARTICLES ON ART_ID = LA_ART_ID " . "INNER JOIN DESIGNATIONS ON DESIGNATIONS.DES_ID = ART_COMPLETE_DES_ID " . "AND DESIGNATIONS.DES_LNG_ID = " . $LNG_ID . " " . "INNER JOIN DES_TEXTS ON DES_TEXTS.TEX_ID = DESIGNATIONS.DES_TEX_ID " . "INNER JOIN SUPPLIERS ON SUP_ID = ART_SUP_ID " . "WHERE " . "LGS_STR_ID = " . $SID . " ";
		$resDB = new TDSQLQuery();
		$resDB->QuerySelect($SQL);
		return $resDB;
	}


	static public function GetAppCriteriaUnion($arARTIDs, $TYP_ID, $LNG_ID = TDM_LANG_ID) {
		foreach ($arARTIDs as $ART_ID) {
			$SQL .= $Union . "SELECT LA_ART_ID AS AID, DES_TEXTS.TEX_TEXT CRITERIA, IFNULL(DES_TEXTS2.TEX_TEXT, LAC_VALUE) VALUE " . "FROM " . "LINK_LA_TYP " . "INNER JOIN LINK_ART ON LA_ID = LAT_LA_ID " . "LEFT JOIN LA_CRITERIA ON LAC_LA_ID = LA_ID " . "LEFT JOIN CRITERIA ON CRI_ID = LAC_CRI_ID " . "LEFT JOIN DESIGNATIONS ON DESIGNATIONS.DES_ID = CRI_SHORT_DES_ID " . "AND DESIGNATIONS.DES_LNG_ID = " . $LNG_ID . " " . "LEFT JOIN DES_TEXTS ON DES_TEXTS.TEX_ID = DESIGNATIONS.DES_TEX_ID " . "LEFT JOIN DESIGNATIONS DESIGNATIONS2 ON DESIGNATIONS2.DES_ID = LAC_KV_DES_ID " . "AND DESIGNATIONS2.DES_LNG_ID = " . $LNG_ID . " " . "LEFT JOIN DES_TEXTS DES_TEXTS2 ON DES_TEXTS2.TEX_ID = DESIGNATIONS2.DES_TEX_ID " . "WHERE " . "LAT_TYP_ID = " . $TYP_ID . " " . "AND LA_ART_ID = " . $ART_ID . " ";
			$Union = " UNION ";
		}
		$resDB = new TDSQLQuery();
		$resDB->QuerySelect($SQL);
		return $resDB;
	}


	static public function ImagesAvialable($arARTIDs) {
		$arImgArts = array();
		$ARTs = implode(",", $arARTIDs);
		$SQL = "SELECT LGA_ART_ID FROM LINK_GRA_ART " . "INNER JOIN GRAPHICS ON GRA_ID = LGA_GRA_ID " . "INNER JOIN DOC_TYPES ON DOC_TYPE = GRA_DOC_TYPE " . "WHERE LGA_ART_ID IN (" . $ARTs . ") AND GRA_DOC_TYPE NOT IN (1,2)";
		$resDB = new TDSQLQuery();
		$resDB->QuerySelect($SQL);
		while ($arDB = $resDB->Fetch()) {
			$arImgArts[] = $arDB["LGA_ART_ID"];
		}
		return $arImgArts;
	}


	static public function GetImagesUnion($arARTIDs, $LNG_ID = TDM_LANG_ID) {
		foreach ($arARTIDs as $ART_ID) {
			$SQL .= $Union . "SELECT LGA_ART_ID AS AID, CONCAT('images/', GRA_TAB_NR, '/', GRA_GRD_ID, '.', IF(LOWER(DOC_EXTENSION)='jp2', 'jpg', LOWER(DOC_EXTENSION))) AS PATH " . "FROM " . "LINK_GRA_ART " . "INNER JOIN GRAPHICS ON GRA_ID = LGA_GRA_ID " . "INNER JOIN DOC_TYPES ON DOC_TYPE = GRA_DOC_TYPE " . "WHERE " . "LGA_ART_ID = " . $ART_ID . " AND " . "(GRA_LNG_ID = " . $LNG_ID . " OR GRA_LNG_ID = 255) AND " . "GRA_DOC_TYPE NOT IN (1, 2) ";
			$Union = " UNION ";
		}
		$resDB = new TDSQLQuery();
		$resDB->QuerySelect($SQL);
		return $resDB;
	}


	static public function GetArtsLogoUnion($arARTIDs) {
		$SQL = "SELECT ART_ID AS AID, CONCAT('images/logos/', SLO_ID, '.png') AS PATH " . "FROM ARTICLES " . "INNER JOIN SUPPLIER_LOGOS ON SLO_SUP_ID = ART_SUP_ID " . "WHERE ART_ID IN (" . implode(",", $arARTIDs) . ") ";
		$resDB = new TDSQLQuery();
		$resDB->QuerySelect($SQL);
		return $resDB;
	}


	static public function GetPartByPKEY($BKEY, $AKEY, $LNG_ID = TDM_LANG_ID) {
		$SQL = "SELECT DISTINCT " . "IF (ART_LOOKUP.ARL_KIND IN (3, 4), BRANDS.BRA_BRAND, SUPPLIERS.SUP_BRAND) AS BRAND, " . "ART_LOOKUP.ARL_SEARCH_NUMBER AS ARTICLE, " . "ART_LOOKUP.ARL_KIND AS KIND,  " . "ARTICLES.ART_ID AS AID, " . "DES_TEXTS.TEX_TEXT AS TD_NAME " . "FROM ART_LOOKUP " . "LEFT JOIN BRANDS ON BRANDS.BRA_ID = ART_LOOKUP.ARL_BRA_ID " . "INNER JOIN ARTICLES ON ARTICLES.ART_ID = ART_LOOKUP.ARL_ART_ID " . "INNER JOIN SUPPLIERS ON SUPPLIERS.SUP_ID = ARTICLES.ART_SUP_ID " . "INNER JOIN DESIGNATIONS ON DESIGNATIONS.DES_ID = ARTICLES.ART_COMPLETE_DES_ID " . "INNER JOIN DES_TEXTS ON DES_TEXTS.TEX_ID = DESIGNATIONS.DES_TEX_ID " . "WHERE " . "ART_LOOKUP.ARL_SEARCH_NUMBER = '" . $AKEY . "' AND " . "ART_LOOKUP.ARL_KIND IN (1, 2, 3, 4, 5) AND  " . "DESIGNATIONS.DES_LNG_ID = " . $LNG_ID . " " . "ORDER BY ARL_KIND DESC;";
		$resDB = new TDSQLQuery();
		$resDB->QuerySelect($SQL);
		if ($arDB = $resDB->Fetch()) {
			$CurBKEY = TDMSingleKey($arDB["BRAND"], true);
			if (!($CurBKEY == $BKEY)) {
				continue;
			}
			return $arDB;
		}
		return array();
	}


	static public function GetPropertys($ART_ID, $LNG_ID = TDM_LANG_ID) {
		$SQL = "SELECT ACR_ART_ID AS AID, ACR_CRI_ID AS CRID, DES_TEXTS.TEX_TEXT AS NAME, " . "IFNULL(DES_TEXTS2.TEX_TEXT, ACR_VALUE) AS VALUE " . "FROM ARTICLE_CRITERIA " . "LEFT JOIN DESIGNATIONS AS DESIGNATIONS2 ON DESIGNATIONS2.DES_ID = ACR_KV_DES_ID " . "LEFT JOIN DES_TEXTS AS DES_TEXTS2 ON DES_TEXTS2.TEX_ID = DESIGNATIONS2.DES_TEX_ID " . "LEFT JOIN CRITERIA ON CRI_ID = ACR_CRI_ID " . "LEFT JOIN DESIGNATIONS ON DESIGNATIONS.DES_ID = CRI_DES_ID " . "LEFT JOIN DES_TEXTS ON DES_TEXTS.TEX_ID = DESIGNATIONS.DES_TEX_ID " . "WHERE ACR_ART_ID = " . $ART_ID . " AND " . "(DESIGNATIONS.DES_LNG_ID IS NULL OR DESIGNATIONS.DES_LNG_ID = " . $LNG_ID . ") AND " . "(DESIGNATIONS2.DES_LNG_ID IS NULL OR DESIGNATIONS2.DES_LNG_ID = " . $LNG_ID . "); ";
		$resDB = new TDSQLQuery();
		$resDB->QuerySelect($SQL);
		return $resDB;
	}


	static public function GetPropertysUnion($arARTIDs, $LNG_ID = TDM_LANG_ID) {
		$ARTs = implode(",", $arARTIDs);
		$SQL = "SELECT ACR_ART_ID AS AID, ACR_CRI_ID AS CRID, DES_TEXTS.TEX_TEXT AS NAME, " . "IFNULL(DES_TEXTS2.TEX_TEXT, ACR_VALUE) AS VALUE " . "FROM ARTICLE_CRITERIA " . "LEFT JOIN DESIGNATIONS AS DESIGNATIONS2 ON DESIGNATIONS2.DES_ID = ACR_KV_DES_ID " . "LEFT JOIN DES_TEXTS AS DES_TEXTS2 ON DES_TEXTS2.TEX_ID = DESIGNATIONS2.DES_TEX_ID " . "LEFT JOIN CRITERIA ON CRI_ID = ACR_CRI_ID " . "LEFT JOIN DESIGNATIONS ON DESIGNATIONS.DES_ID = CRI_DES_ID " . "LEFT JOIN DES_TEXTS ON DES_TEXTS.TEX_ID = DESIGNATIONS.DES_TEX_ID " . "WHERE ACR_ART_ID IN (" . $ARTs . ") AND " . "(DESIGNATIONS.DES_LNG_ID IS NULL OR DESIGNATIONS.DES_LNG_ID = " . $LNG_ID . ") AND " . "(DESIGNATIONS2.DES_LNG_ID IS NULL OR DESIGNATIONS2.DES_LNG_ID = " . $LNG_ID . "); ";
		$resDB = new TDSQLQuery();
		$resDB->QuerySelect($SQL);
		return $resDB;
	}


	static public function LookupAnalog($ART_ID, $arTYPE = array()) {
		if (0 < count($arTYPE)) {
			$TypeFilter = "AND ARL_KIND IN (" . implode(",", $arTYPE) . ") ";
		}
		$SQL = "SELECT ARL_KIND AS TYPE, " . "IF (ART_LOOKUP.ARL_KIND = 2, SUPPLIERS.SUP_BRAND, BRANDS.BRA_BRAND) AS BRAND, " . "ARL_DISPLAY_NR AS ARTICLE " . "FROM ART_LOOKUP " . "LEFT JOIN BRANDS ON BRA_ID = ARL_BRA_ID " . "INNER JOIN ARTICLES ON ARTICLES.ART_ID = ART_LOOKUP.ARL_ART_ID " . "INNER JOIN SUPPLIERS ON SUPPLIERS.SUP_ID = ARTICLES.ART_SUP_ID " . "WHERE " . "ARL_ART_ID = " . $ART_ID . " " . $TypeFilter . "ORDER BY ARL_KIND, BRA_BRAND, ARL_DISPLAY_NR; ";
		$resDB = new TDSQLQuery();
		$resDB->QuerySelect($SQL);
		return $resDB;
	}


	static public function GetApplicability($ART_ID, $LNG_ID = TDM_LANG_ID) {
		$SQL = "SELECT TYP_ID, MOD_ID, MFA_BRAND, " . "DES_TEXTS7.TEX_TEXT AS MOD_CDS_TEXT, " . "DES_TEXTS.TEX_TEXT AS TYP_CDS_TEXT, " . "TYP_PCON_START, TYP_PCON_END, TYP_CCM, TYP_KW_FROM, TYP_HP_FROM, TYP_CYLINDERS, ENGINES.ENG_CODE, " . "DES_TEXTS3.TEX_TEXT AS TYP_FUEL_DES_TEXT, " . "IFNULL(DES_TEXTS4.TEX_TEXT, DES_TEXTS5.TEX_TEXT) AS TYP_BODY_DES_TEXT " . "FROM LINK_ART " . "INNER JOIN LINK_LA_TYP ON LAT_LA_ID = LA_ID " . "INNER JOIN TYPES ON TYP_ID = LAT_TYP_ID " . "INNER JOIN COUNTRY_DESIGNATIONS ON COUNTRY_DESIGNATIONS.CDS_ID = TYP_CDS_ID " . "INNER JOIN DES_TEXTS ON DES_TEXTS.TEX_ID = COUNTRY_DESIGNATIONS.CDS_TEX_ID " . "INNER JOIN MODELS ON MOD_ID = TYP_MOD_ID " . "INNER JOIN MANUFACTURERS ON MFA_ID = MOD_MFA_ID " . "INNER JOIN COUNTRY_DESIGNATIONS AS COUNTRY_DESIGNATIONS2 ON COUNTRY_DESIGNATIONS2.CDS_ID = MOD_CDS_ID " . "INNER JOIN DES_TEXTS AS DES_TEXTS7 ON DES_TEXTS7.TEX_ID = COUNTRY_DESIGNATIONS2.CDS_TEX_ID " . "LEFT JOIN DESIGNATIONS ON DESIGNATIONS.DES_ID = TYP_KV_ENGINE_DES_ID " . "LEFT JOIN DESIGNATIONS AS DESIGNATIONS2 ON DESIGNATIONS2.DES_ID = TYP_KV_FUEL_DES_ID " . "LEFT JOIN DES_TEXTS AS DES_TEXTS3 ON DES_TEXTS3.TEX_ID = DESIGNATIONS2.DES_TEX_ID " . "LEFT JOIN LINK_TYP_ENG ON LTE_TYP_ID = TYP_ID " . "LEFT JOIN ENGINES ON ENG_ID = LTE_ENG_ID " . "LEFT JOIN DESIGNATIONS AS DESIGNATIONS3 ON DESIGNATIONS3.DES_ID = TYP_KV_BODY_DES_ID " . "LEFT JOIN DES_TEXTS AS DES_TEXTS4 ON DES_TEXTS4.TEX_ID = DESIGNATIONS3.DES_TEX_ID " . "LEFT JOIN DESIGNATIONS AS DESIGNATIONS4 ON DESIGNATIONS4.DES_ID = TYP_KV_MODEL_DES_ID " . "LEFT JOIN DES_TEXTS AS DES_TEXTS5 ON DES_TEXTS5.TEX_ID = DESIGNATIONS4.DES_TEX_ID " . "WHERE " . "LA_ART_ID = " . $ART_ID . " AND " . "COUNTRY_DESIGNATIONS.CDS_LNG_ID = " . $LNG_ID . " AND " . "COUNTRY_DESIGNATIONS2.CDS_LNG_ID = " . $LNG_ID . " AND " . "(DESIGNATIONS.DES_LNG_ID IS NULL OR DESIGNATIONS.DES_LNG_ID = " . $LNG_ID . ") AND " . "(DESIGNATIONS2.DES_LNG_ID IS NULL OR DESIGNATIONS2.DES_LNG_ID = " . $LNG_ID . ") AND " . "(DESIGNATIONS3.DES_LNG_ID IS NULL OR DESIGNATIONS3.DES_LNG_ID = " . $LNG_ID . ") AND " . "(DESIGNATIONS4.DES_LNG_ID IS NULL OR DESIGNATIONS4.DES_LNG_ID = " . $LNG_ID . ") AND " . "DES_TEXTS.TEX_TEXT NOT LIKE 'ORA-%' " . "ORDER BY MFA_BRAND, MOD_CDS_TEXT, TYP_CDS_TEXT, TYP_PCON_START, TYP_CCM ;";
		$resDB = new TDSQLQuery();
		$resDB->QuerySelect($SQL);
		return $resDB;
	}


	static public function GetPDFs($ART_ID, $LNG_ID = TDM_LANG_ID, $LIMIT = 0) {
		if (0 < intval($LIMIT)) {
			$strLIMIT = "LIMIT " . intval($LIMIT);
		}
		$SQL = "SELECT CONCAT('pdf/', GRA_ID, LPAD(GRA_LNG_ID, 3, '0'), '.pdf') AS PATH " . "FROM LINK_GRA_ART " . "INNER JOIN GRAPHICS ON GRA_ID = LGA_GRA_ID " . "WHERE " . "LGA_ART_ID = " . $ART_ID . " AND " . "(GRA_LNG_ID = " . $LNG_ID . " OR GRA_LNG_ID = 255) AND " . "GRA_DOC_TYPE = 2 " . "ORDER BY LGA_ART_ID, GRA_ID, GRA_LNG_ID " . $strLIMIT . ";";
		$resDB = new TDSQLQuery();
		$resDB->QuerySelect($SQL);
		return $resDB;
	}


	static public function LookupByNumber($Number, $LNG_ID = TDM_LANG_ID) {
		$SQL = "SELECT DISTINCT " . "IF (ART_LOOKUP.ARL_KIND IN (3, 4), BRANDS.BRA_BRAND, SUPPLIERS.SUP_BRAND) AS BRAND, " . "ART_LOOKUP.ARL_SEARCH_NUMBER AS ARTICLE, " . "ART_LOOKUP.ARL_KIND AS KIND,  " . "ARTICLES.ART_ID AS AID, " . "DES_TEXTS.TEX_TEXT AS TD_NAME " . "FROM ART_LOOKUP " . "LEFT JOIN BRANDS ON BRANDS.BRA_ID = ART_LOOKUP.ARL_BRA_ID " . "INNER JOIN ARTICLES ON ARTICLES.ART_ID = ART_LOOKUP.ARL_ART_ID " . "INNER JOIN SUPPLIERS ON SUPPLIERS.SUP_ID = ARTICLES.ART_SUP_ID " . "INNER JOIN DESIGNATIONS ON DESIGNATIONS.DES_ID = ARTICLES.ART_COMPLETE_DES_ID " . "INNER JOIN DES_TEXTS ON DES_TEXTS.TEX_ID = DESIGNATIONS.DES_TEX_ID " . "WHERE " . "ART_LOOKUP.ARL_SEARCH_NUMBER = '" . $Number . "' AND " . "ART_LOOKUP.ARL_KIND IN (1, 2, 3, 4, 5) AND  " . "DESIGNATIONS.DES_LNG_ID = " . $LNG_ID . " " . "ORDER BY ARL_KIND DESC;";
		$resDB = new TDSQLQuery();
		$resDB->QuerySelect($SQL);
		return $resDB;
	}


	static public function LookupByBrandNumber($Brand, $Number, $LNG_ID = TDM_LANG_ID) {
		if ($Brand == "" || $Number == "") {
			return false;
		}
		$SQL = "SELECT DISTINCT ARTICLES.ART_ID AS AID, \r\n\t\t\t\tIF (ART_LOOKUP2.ARL_KIND = 3, BRANDS2.BRA_BRAND, SUPPLIERS2.SUP_BRAND) AS BRAND,\r\n\t\t\t\tIF (ART_LOOKUP2.ARL_KIND IN (2, 3), ART_LOOKUP2.ARL_DISPLAY_NR, ARTICLES2.ART_ARTICLE_NR) AS ARTICLE,\r\n\t\t\t\tART_LOOKUP2.ARL_KIND AS KIND, \r\n\t\t\t\tDES_TEXTS.TEX_TEXT AS TD_NAME\r\n\t\t\tFROM\r\n\t\t\t\tART_LOOKUP\r\n\t\t\t\tLEFT JOIN BRANDS ON BRANDS.BRA_ID = ART_LOOKUP.ARL_BRA_ID \r\n\t\t\t\tINNER JOIN ARTICLES ON ARTICLES.ART_ID = ART_LOOKUP.ARL_ART_ID \r\n\t\t\t\tINNER JOIN SUPPLIERS ON SUPPLIERS.SUP_ID = ARTICLES.ART_SUP_ID \r\n\t\t\t\tINNER JOIN ART_LOOKUP AS ART_LOOKUP2 FORCE KEY (PRIMARY) ON ART_LOOKUP2.ARL_ART_ID = ART_LOOKUP.ARL_ART_ID \r\n\t\t\t\tLEFT JOIN BRANDS AS BRANDS2 ON BRANDS2.BRA_ID = ART_LOOKUP2.ARL_BRA_ID \r\n\t\t\t\tINNER JOIN ARTICLES AS ARTICLES2 ON ARTICLES2.ART_ID = ART_LOOKUP2.ARL_ART_ID \r\n\t\t\t\tINNER JOIN SUPPLIERS AS SUPPLIERS2 FORCE KEY (PRIMARY) ON SUPPLIERS2.SUP_ID = ARTICLES2.ART_SUP_ID \r\n\t\t\t\tINNER JOIN DESIGNATIONS ON DESIGNATIONS.DES_ID = ARTICLES.ART_COMPLETE_DES_ID \r\n\t\t\t\tINNER JOIN DES_TEXTS ON DES_TEXTS.TEX_ID = DESIGNATIONS.DES_TEX_ID\r\n\t\t\tWHERE\r\n\t\t\t\tART_LOOKUP.ARL_SEARCH_NUMBER = '" . $Number . "' AND\r\n\t\t\t\t(ART_LOOKUP.ARL_KIND IN (3, 4) AND BRANDS.BRA_BRAND = '" . $Brand . "' OR\r\n\t\t\t\tART_LOOKUP.ARL_KIND IN (1, 2) AND SUPPLIERS.SUP_BRAND = '" . $Brand . "') AND \r\n\t\t\t\t(ART_LOOKUP.ARL_KIND, ART_LOOKUP2.ARL_KIND) IN\r\n\t\t\t\t((1, 1), (1, 2), (1, 3),\r\n\t\t\t\t(2, 1), (2, 2), (2, 3),\r\n\t\t\t\t(3, 1), (3, 2), (3, 3),\r\n\t\t\t\t(4, 1)) \r\n\t\t\t\tAND DESIGNATIONS.DES_LNG_ID = " . $LNG_ID . " \r\n\t\t\tORDER BY KIND, BRAND, ARTICLE;";
		$resDB = new TDSQLQuery();
		$resDB->QuerySelect($SQL);
		return $resDB;
	}


	
}
class TDSQLQuery {

	public $Error = null;

	public $Result = null;

	public $NumRows = null;

	
	public function Fetch() {
		if (0 < $this->NumRows) {
			$arResult = mysql_fetch_assoc($this->Result);
			return $arResult;
		}
		$this->Error = "No records";
		return false;
	}


	public function QuerySelect($SQL) {
		$resQuery = mysql_query($SQL);
		if ($resQuery) {
			$this->NumRows = mysql_num_rows($resQuery);
			if (0 < $this->NumRows) {
				$this->Result = $resQuery;
			}
			else {
				$this->Error = "No records";
				return false;
			}
		}
		$this->Error = "No records";
		return false;
	}


	
}
if (!(defined("TDM_PROLOG_INCLUDED")) || TDM_PROLOG_INCLUDED !== true) {
	exit();
}

